{"version":3,"sources":["Panel.js"],"names":["cc","Class","extends","Component","properties","_scaleMode","scaleMode","get","set","val","type","Enum","NO_SCALE","SHOW_ALL","NO_BORDER","SCALE_WIDTH","SCALE_HEIGHT","onLoad","size","lib","data","system","screen","value","width","node","height","scaleX","scaleY"],"mappings":";;;;;;AAAAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,oBAAY,CAXJ;AAYRC,mBAAW;AACPC,iBAAK,eAAY;AACb,uBAAO,KAAKF,UAAZ;AACH,aAHM;AAIPG,iBAAK,aAAUC,GAAV,EAAe;AAChB,qBAAKJ,UAAL,GAAkBI,GAAlB;AACH,aANM;AAOPC,kBAAMV,GAAGW,IAAH,CAAQ;AACVC,0BAAU,CADA;AAEVC,0BAAU,CAFA;AAGVC,2BAAW,CAHD;AAIVC,6BAAa,CAJH;AAKVC,8BAAc;AALJ,aAAR;AAPC;AAZH,KAHP;;AAgCL;AACAC,YAAQ,kBAAY;AAChB,YAAIC,OAAOC,IAAIC,IAAJ,CAASC,MAAT,CAAgBC,MAAhB,CAAuBC,KAAlC;AACA,YAAIC,QAAQ,KAAKC,IAAL,CAAUD,KAAtB;AACA,YAAIE,SAAS,KAAKD,IAAL,CAAUC,MAAvB;AACA,YAAIpB,YAAY,KAAKA,SAArB;AACA,YAAIkB,SAASE,MAAT,IAAmBpB,SAAvB,EAAkC;AAC9B,gBAAIqB,SAAST,KAAKM,KAAL,GAAaA,KAA1B;AACA,gBAAII,SAASV,KAAKQ,MAAL,GAAcA,MAA3B;AACA,gBAAIpB,aAAa,CAAjB,EAAoB;AAChB,qBAAKmB,IAAL,CAAUE,MAAV,GAAmBA,SAASC,MAAT,GAAkBD,MAAlB,GAA2BC,MAA9C;AACA,qBAAKH,IAAL,CAAUG,MAAV,GAAmBD,SAASC,MAAT,GAAkBD,MAAlB,GAA2BC,MAA9C;AACH,aAHD,MAGO,IAAItB,aAAa,CAAjB,EAAoB;AACvB,qBAAKmB,IAAL,CAAUE,MAAV,GAAmBA,SAASC,MAAT,GAAkBD,MAAlB,GAA2BC,MAA9C;AACA,qBAAKH,IAAL,CAAUG,MAAV,GAAmBD,SAASC,MAAT,GAAkBD,MAAlB,GAA2BC,MAA9C;AACH,aAHM,MAGA,IAAItB,aAAa,CAAjB,EAAoB;AACvB;AACA,qBAAKmB,IAAL,CAAUE,MAAV,GAAmBA,MAAnB;AACA,qBAAKF,IAAL,CAAUG,MAAV,GAAmBD,MAAnB;AACH,aAJM,MAIA,IAAIrB,aAAa,CAAjB,EAAoB;AACvB;AACA,qBAAKmB,IAAL,CAAUE,MAAV,GAAmBC,MAAnB;AACA,qBAAKH,IAAL,CAAUG,MAAV,GAAmBA,MAAnB;AACH;AACJ;AACJ;;AAED;AACA;;AAEA;AA9DK,CAAT","file":"Panel.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\lib\\component","sourcesContent":["cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //    default: null,      // The default value will be used only when the component attaching\r\n        //                           to a node for the first time\r\n        //    url: cc.Texture2D,  // optional, default is typeof default\r\n        //    serializable: true, // optional, default is true\r\n        //    visible: true,      // optional, default is true\r\n        //    displayName: 'Foo', // optional\r\n        //    readonly: false,    // optional, default is false\r\n        // },\r\n        // ...\r\n        _scaleMode: 1,\r\n        scaleMode: {\r\n            get: function () {\r\n                return this._scaleMode;\r\n            },\r\n            set: function (val) {\r\n                this._scaleMode = val;\r\n            },\r\n            type: cc.Enum({\r\n                NO_SCALE: 0,\r\n                SHOW_ALL: 1,\r\n                NO_BORDER: 2,\r\n                SCALE_WIDTH: 3,\r\n                SCALE_HEIGHT: 4\r\n            })\r\n        }\r\n    },\r\n\r\n    // use this for initialization\r\n    onLoad: function () {\r\n        var size = lib.data.system.screen.value;\r\n        var width = this.node.width;\r\n        var height = this.node.height;\r\n        var scaleMode = this.scaleMode;\r\n        if (width && height && scaleMode) {\r\n            var scaleX = size.width / width;\r\n            var scaleY = size.height / height;\r\n            if (scaleMode == 1) {\r\n                this.node.scaleX = scaleX < scaleY ? scaleX : scaleY;\r\n                this.node.scaleY = scaleX < scaleY ? scaleX : scaleY;\r\n            } else if (scaleMode == 2) {\r\n                this.node.scaleX = scaleX > scaleY ? scaleX : scaleY;\r\n                this.node.scaleY = scaleX > scaleY ? scaleX : scaleY;\r\n            } else if (scaleMode == 3) {\r\n                // this.height = this.parent.height / scaleX;\r\n                this.node.scaleX = scaleX;\r\n                this.node.scaleY = scaleX;\r\n            } else if (scaleMode == 4) {\r\n                // this.width = this.parent.width / scaleY;\r\n                this.node.scaleX = scaleY;\r\n                this.node.scaleY = scaleY;\r\n            }\r\n        }\r\n    },\r\n\r\n    // called every frame, uncomment this function to activate update callback\r\n    // update: function (dt) {\r\n\r\n    // },\r\n});\r\n\r\n"]}